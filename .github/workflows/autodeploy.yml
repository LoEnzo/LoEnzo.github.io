name: blog deploy

on: 
  push:
    branches: 
      - master

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - run: yarn install
    - run: yarn build
    # - run: npm ci
    # - run: npm install vuepress
    # - run: npm run build

    # 推送到阿里云服务器
    - name: deploy file to server
      uses: wlixcc/SFTP-Deploy-Action@v1.0 
      with:  
        username: '${{ secrets.ALIYUN_USERNAME}}'         # ssh user name
        server: '${{ secrets.Aliyun_IP }}'                # 引用之前创建好的secret
        ssh_private_key: ${{ secrets.Aliyun_KEY }}        # 引用之前创建好的secret
        local_path: 'public/*'                            # 对应我们项目public的文件夹路径
        remote_path: '${{ secrets.ALIYUN_BLOG_CATALOG }}'

    # 推送构建的静态网页到myblog分支
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v2.5.0
      env:
        ACTIONS_DEPLOY_KEY: ${{secrets.ACCESS_TOKEN}}
        PUBLISH_BRANCH: myblog
        PUBLISH_DIR: public
  
  # 推送镜像到阿里云私有仓库
  build-docker-images-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build And Push Docker image
      uses: aliyun/acr-login@v1         # 使用阿里云镜像服务action
      env:
        docker_repo: registry.cn-hangzhou.aliyuncs.com/aliyun-docker-rep  # 指定自己的仓库地址
        image_name: daxigua             # 指定镜像名称
        tag: latest                     # 指定镜像标签
      run: |
        docker version
        # 登录阿里云镜像仓库
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
        # 使用Dockerfile构建镜像
        docker build . --file Dockerfile --tag $docker_repo/$image_name:$tag
        # 推送镜像到镜像仓库
        docker push $docker_repo/$image_name:$tag