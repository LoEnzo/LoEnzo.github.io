(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{491:function(a,t,e){a.exports=e.p+"assets/img/kafka2.a7931f38.png"},492:function(a,t,e){a.exports=e.p+"assets/img/kafka1.01d84736.png"},528:function(a,t,e){"use strict";e.r(t);var o=e(4),r=Object(o.a)({},(function(){var a=this,t=a.$createElement,o=a._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("div",{staticClass:"custom-block tip"},[o("p",[a._v("Kafka是是一个分布式、支持分区的（partition）、多副本的（replica），基于zookeeper协调的分布式消息系统，它的最大的特性就是可以实时的处理大量数据以满足各种需求场景："),o("strong",[a._v("实时监控、日志收集，持久化存储、消息系统：高吞吐、用户行为分析和追踪")])])]),a._v(" "),o("h2",{attrs:{id:"安装启动"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#安装启动"}},[a._v("#")]),a._v(" 安装启动")]),a._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"http://kafka.apache.org/downloads",target:"_blank",rel:"noopener noreferrer"}},[a._v("下载安装"),o("OutboundLink")],1)]),a._v(" "),o("li",[o("a",{attrs:{href:"http://kafka.apache.org/documentation/",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方文档"),o("OutboundLink")],1),a._v("，"),o("a",{attrs:{href:"https://kafka.apachecn.org/documentation.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("中文文档"),o("OutboundLink")],1)]),a._v(" "),o("li",[a._v("压缩包安装，添加"),o("code",[a._v("安装目录/bin")]),a._v("进环境变量，根据配置文件启动"),o("code",[a._v("zookeeper")]),a._v("、"),o("code",[a._v("kafka")])]),a._v(" "),o("li",[a._v("启动"),o("code",[a._v("zookeeper")])])]),a._v(" "),o("blockquote",[o("p",[a._v("nohup bin/zookeeper-server-start.sh config/zk.properties &")])]),a._v(" "),o("ul",[o("li",[a._v("启动"),o("code",[a._v("kafka")])])]),a._v(" "),o("blockquote",[o("p",[a._v("nohup bin/kafka-server-start.sh config/kafka1.properties &")])]),a._v(" "),o("h2",{attrs:{id:"kafka核心概念"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#kafka核心概念"}},[a._v("#")]),a._v(" Kafka核心概念")]),a._v(" "),o("h2",{attrs:{id:"测试"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[a._v("#")]),a._v(" 测试：")]),a._v(" "),o("h3",{attrs:{id:"_1-创建一个topic的生产者和消费者"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建一个topic的生产者和消费者"}},[a._v("#")]),a._v(" 1. 创建一个topic的生产者和消费者")]),a._v(" "),o("ul",[o("li",[a._v("启动zookeeper")])]),a._v(" "),o("blockquote",[o("p",[a._v("nohup bin/zookeeper-server-start.sh config/zk.properties &")])]),a._v(" "),o("ul",[o("li",[a._v("启动kafka")])]),a._v(" "),o("blockquote",[o("p",[a._v("nohup bin/kafka-server-start.sh config/kafka1.properties &")])]),a._v(" "),o("ul",[o("li",[a._v("创建一个topic为"),o("code",[a._v("kafkatest")])])]),a._v(" "),o("blockquote",[o("p",[a._v("bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic kafkatest")])]),a._v(" "),o("ul",[o("li",[a._v("创建一个名为"),o("code",[a._v("kafkatest")]),a._v("的消费者")])]),a._v(" "),o("blockquote",[o("p",[a._v("bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic kafkatest --from-beginning")])]),a._v(" "),o("ul",[o("li",[a._v("创建一个名为"),o("code",[a._v("kafkatest")]),a._v("的生产者（新开一个终端）")])]),a._v(" "),o("blockquote",[o("p",[a._v("bin/kafka-console-producer.sh --broker-list localhost:9092 --topic kafkatest")])]),a._v(" "),o("p",[a._v("模拟生产者产生数据：")]),a._v(" "),o("p",[o("img",{attrs:{src:e(491),alt:"image-20200904144343482"}})]),a._v(" "),o("p",[a._v("模拟消费者处理数据：")]),a._v(" "),o("p",[o("img",{attrs:{src:e(492),alt:"image-20200904144634968"}})]),a._v(" "),o("h3",{attrs:{id:"_2-kafka-整合-spark"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-kafka-整合-spark"}},[a._v("#")]),a._v(" 2. kafka 整合 spark")]),a._v(" "),o("p",[a._v("ota_perftrace_topic")])])}),[],!1,null,null,null);t.default=r.exports}}]);